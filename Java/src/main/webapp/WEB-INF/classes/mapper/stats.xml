<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="stats">

	<!--결제 통계 목록 (업장 별 합)-->
	<select id="selectPaymentTeamStatsOutDetailTotalList" parameterType="orderSearchCondition"  resultType="paymentTeamTotalStats">
	  SELECT team, price, `count`, outlet_detail_cnt, Floor((result.price/result.outlet_detail_cnt)) avrg_outlet_price
	  FROM
	  (
	  SELECT A.team team, sum(B.price) price, COUNT(B.`count`) `count`, count(distinct B.outlet_detail) outlet_detail_cnt
			FROM `order_for_stats` A
			INNER JOIN `order` B
			ON A.seq  = B.seq
			WHERE A.company = #{company}
			AND date_format(A.`delivered`, '%Y-%m-%d') BETWEEN #{fromDate} AND #{toDate} 
			AND `count` > 0
			GROUP BY B.team
	  ) AS result
	  <if test =" teamstats_order_query_str != null ">
	   ORDER BY ${teamstats_order_query_str}
	  </if>
	</select>
	
	<!-- 결제 통계 목록 (외주업체) -->
	<select id="selectPaymentGeoriseStatsList" parameterType="orderSearchCondition" resultType="paymentGeoriseStats">
	  SELECT B.seq, B.team, B.outlet, B.outlet_detail, C.username, B.item, B.shape, B.`process`
	    , B.width, B.height, B.unitprice, B.`count`, B.price
	    , A.sampled_first, A.registered, A.designed, A.produced, A.delivered
	    , B.order_status
	    , B.unitprice_georise
	  FROM order_for_stats A
	  INNER JOIN `order` B
	  ON A.seq  = B.seq
	  INNER JOIN `users` C
	  ON B.userid  = C.userid
	  INNER JOIN `user_roles` D
	  ON A.producedby  = D.userid  
	  WHERE A.company = #{company} 
	  AND D.role = 'OUTSOURCING'
	  AND date_format(A.`delivered`, '%Y-%m-%d') BETWEEN #{fromDate} AND #{toDate} 
	  AND `count` > 0
  	  ORDER BY A.delivered ASC
	</select>
	
	<!-- 결제 통계 목록 -->
	<select id="selectPaymentStatsList" parameterType="orderSearchCondition" resultType="paymentStats">
	SELECT *
	FROM
	(
	  SELECT B.seq, B.team, B.outlet, B.outlet_detail, C.username, B.item, B.shape, B.`process`
	    , B.width, B.height, B.unitprice, B.`count`, B.price
	    , A.sampled_first, A.registered, A.designed, A.produced, A.delivered
	    , B.order_status
	  FROM order_for_stats A
	  INNER JOIN `order` B
	  ON A.seq  = B.seq
	  INNER JOIN `users` C
	  ON B.userid  = C.userid
	  WHERE A.company = #{company} 
	  AND date_format(A.`delivered`, '%Y-%m-%d') BETWEEN #{fromDate} AND #{toDate} 
	  <if test="item != null and item != ''">
	   AND B.item = #{item}
	  </if>
	  AND `count` > 0
	 ) result
	  <choose>
		  <when test =" teamstats_order_query_str != null ">
	  		ORDER BY ${teamstats_order_query_str} , delivered ASC
		  </when>
		  <otherwise>
		  	ORDER BY delivered ASC
		  </otherwise>
	  </choose>
	</select>

	<!--품목 통계와 지역 통계-->
	<select id="selectListOrderStatsJoinOrder" parameterType="orderSearchCondition" resultType="orderForStats">
		SELECT A.item, A.team, B.`count`, B.price, A.sampled_first, A.sampled_first_adjust, A.registered, A.designed, A.produced, A.delivered
		FROM `order_for_stats` A
		INNER JOIN `order` B
		ON A.seq  = B.seq
		WHERE A.company = #{company} 
		AND date_format(A.`delivered`, '%Y-%m-%d') BETWEEN #{fromDate} AND #{toDate} 
		AND `count` > 0
		<if test="order_stand != null ">
		ORDER BY #{order_stand} ASC
		</if>
	</select>
	
		<!--품목 통계와 지역 통계 업데이트-->
	<update id="selectListUpdateOrderStatsJoinOrder" parameterType="orderSearchCondition">

      UPDATE `order_for_stats` as A , `order` as B set A.item = B.item, A.shape = B.shape, A.team = B.team WHERE A.seq=B.seq AND A.company=B.company AND A.userid = B.userid AND date_format(A.`delivered`, '%Y-%m-%d') BETWEEN #{fromDate} AND #{toDate}  
	  
	</update>

	<select id="getOrderStats" parameterType="orderSearchCondition" resultType="order" >
		/* stats.getOrderStats */
		SELECT `seq`, `userid`, `order_status`, `item`,`item_code`, `shape`, `process`, `background`, `width`, `height`, `depth`, `count`, `price`,`purchase_price`,
        `sender_postcode`,`sender_address`,`sender_detailaddress`, `sender_name`, `sender_phone`, `workerid`, `description`, `team`, `outlet`, `purchaseprice`,`unitprice`,
        `outlet_detail`,`fromDate`, `invoice_info`, `invoice_number`,`uniquecd`, `registered`, `modified`, `company`
        FROM `order`
    WHERE date_format(`registered`, '%Y-%m-%d') BETWEEN #{fromDate} AND #{toDate} 
		AND `company` = #{company}
		<if test="orderStatus != null and orderStatus != ''">
		AND order_status = #{orderStatus}
		</if>
		<if test="item != null and item != ''">
		AND item = #{item}
		</if>
		<if test="isCompanyEmployee">
		AND `userid` = #{userid}
		</if>
		<if test="userid != null and userid != ''">
		AND `userid` = #{userid}
		</if>
		<if test="team != null and team != ''">
		AND team = #{team}
		</if>
		<if test="outlet != null and outlet != ''">
		AND outlet = #{outlet}
		</if>
		<if test="outlet_detail != null and outlet_detail != ''">
		AND outlet_detail = #{outlet_detail}
		</if>
		<if test="isUnitZero">
		AND count = 0
		</if>
		<if test="isPriceZero">
		AND price = 0
		</if>
	</select>
	
	<select id="getOrderStatsId" parameterType="orderSearchCondition" resultType="order" >
		/* stats.getOrderStats */
		SELECT `seq`, `userid`, `order_status`, `item`,`item_code`, `shape`, `process`, `background`, `width`, `height`, `depth`, `count`, `price`,`purchase_price`,
        `sender_postcode`,`sender_address`,`sender_detailaddress`, `sender_name`, `sender_phone`, `workerid`, `description`, `team`, `outlet`,`purchaseprice`, `unitprice`,
        `outlet_detail`,`fromDate`, `invoice_info`, `invoice_number`,`uniquecd`, `registered`, `modified`, `company`
        FROM `order`
		WHERE date_format(`registered`, '%Y-%m-%d') BETWEEN #{fromDate} AND #{toDate}
		AND `company` = #{company}
		AND !(sender_postcode='')
		AND !(sender_phone='')
		<if test="orderStatus != null and orderStatus != ''">
		AND order_status = #{orderStatus}
		</if>
		<if test="item != null and item != ''">
		AND item = #{item}
		</if>
		<if test="isCompanyEmployee">
		AND `userid` = #{userid}
		</if>
		<if test="userid != null and userid != ''">
		AND `userid` = #{userid}
		</if>
		<if test="team != null and team != ''">
		AND team = #{team}
		</if>
		<if test="outlet != null and outlet != ''">
		AND outlet = #{outlet}
		</if>
		<if test="outlet_detail != null and outlet_detail != ''">
		AND outlet_detail = #{outlet_detail}
		</if>
		<if test="isUnitZero">
		AND count = 0
		</if>
		<if test="isPriceZero">
		AND price = 0
		</if>
	</select>
	
	<select id="getOrderStatsItemList" parameterType="orderSearchCondition" resultType="order" >
		/* stats.getOrderStats */
		SELECT `seq`, `userid`, `order_status`, `item`,`item_code`, `shape`, `process`, `background`, `width`, `height`, `depth`, `count`, `price`,`purchase_price`,
        `sender_postcode`,`sender_address`,`sender_detailaddress`, `sender_name`, `sender_phone`, `workerid`, `description`, `team`, `outlet`,purchaseprice`, `unitprice`,
        `outlet_detail`,`fromDate`, `invoice_info` , `invoice_number` ,`uniquecd`, `registered`, `modified`
        FROM `order`
		WHERE date_format(`registered`, '%Y-%m-%d') BETWEEN #{fromDate} AND #{toDate}
		AND `company` = #{company}
		<if test="item != null and item != ''">
		AND item = #{item}
		</if>
		<if test="customer != null and customer != ''">
		AND customer = #{customer}
		</if>
		<if test="outlet != null and outlet != ''">
		AND outlet = #{outlet}
		</if>
		<if test="outlet_detail != null and outlet_detail != ''">
		AND outlet_detail = #{outlet_detail}
		</if>
		<if test="orderStatus != null and orderStatus != ''">
		AND order_status = #{orderStatus}
		</if>
		<if test="isUnitZero">
		AND count = 0
		</if>
		<if test="isPriceZero">
		AND price = 0
		</if>
		ORDER BY team;
	</select>
	
	<!-- <select id="getOrderListByUserList" parameterType="statsPaymentCondition" resultType="order">
		/* stats.getOrderListByUserList */
		SELECT *
		FROM `order` 
		WHERE date_format(`registered`, '%Y-%m-%d') BETWEEN #{fromDate} AND #{toDate}
		AND `company` = #{company}
		AND `userid` in 
		<foreach item="userid" index="index" collection="userIdList" open="(" separator="," close=")">
			#{userid}
		</foreach>
		<if test="item != null and item != ''">
		AND item = #{item}
		</if>		
		ORDER BY `team`;
	</select> -->
	
	<!-- 외주업체 상품 배송일 기준으로 가져오기 -->
	<select id="getGeoriseDeliveredList" parameterType="String" resultType="_long">
		/* stats. getGeoriseDeliveredList */
		SELECT seq 
		FROM `order_for_stats`
		WHERE date_format(`delivered`, '%Y-%m-%d') BETWEEN #{fromDate} AND #{toDate}
		AND `producedby` in
		<foreach item="userid" index="index" collection="userIdList" open="(" separator="," close=")">
			#{userid}
		</foreach>		
		ORDER BY `produced` DESC		
	</select>
	
	<select id="getOrderListBySeqList" parameterType="String" resultType="order">
		/* stats.getOrderListBySeqList */
		SELECT *
		FROM `order`
		WHERE `seq` in
		<foreach item="seq" index="index" collection="seqList" open="(" separator="," close=")">
			#{seq}
		</foreach>
		ORDER BY `seq`
	</select>
	
</mapper>